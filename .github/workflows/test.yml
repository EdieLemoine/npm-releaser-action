name: All in one job

on:
  pull_request: ~
  push:
    branches:
      - master


env:
  IS_PUSH: ${{ github.event_name == 'push' }}
  IS_PR: ${{ github.event_name == 'pull_request' }}
  SKIP_CI: ${{ contains(github.event.head_commit.message, '[skip ci]') }}

jobs:
  log:
    name: Log data
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo ${{ env.SKIP_CI }}
          echo ${{ env.IS_PUSH }}
          echo ${{ env.IS_PR }}

      - name: GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"

      - name: Steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"

      - name: Runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"

      - name: Strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"

      - name: Matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

  build:
    name: 'Create build'
    if: "!contains(github.event.commits[0].message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - name: 'Install'
        run: echo 'Installing...'

      - name: '"Build package"'
        run: echo 'Building...'

      - name: Upload build
        uses: actions/upload-artifact@v1
        with:
          name: src
          path: src/

  test:
    name: 'Run tests'
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Get build
        uses: actions/download-artifact@v1
        with:
          name: src

      - name: SKIP CI
        if: "!contains(github.event.head_commit.message, '[skip ci]')"
        run: echo "I should be ignored if you used [skip ci] in your commit message"

      - name: Run tests
        run: |
          ls -la
          cat src/CHANGELOG.md
          cat src/main.js
          cat src/lalala/myFile.js

  release:
    name: 'Create release and publish to npm'
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - name: Get build
        uses: actions/download-artifact@v1
        with:
          name: src

      - name: Run semantic release
        run: echo "Releasing..."

  deploy:
    name: Deploy sandbox
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Get build
        uses: actions/download-artifact@v1
        with:
          name: src

      - name: 'Publish'
        run: |
          ls -la
          echo 'Publishing...'
          cat src/CHANGELOG.md
          cat src/main.js
          cat src/lalala/myFile.js
